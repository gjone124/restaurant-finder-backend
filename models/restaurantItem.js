const mongoose = require("mongoose");
const validator = require("validator");

const restaurantItemSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    minlength: 2,
    maxlength: 100,
  },
  // list of potential cuisines (international; list of continents; then countries; then territories; then regions; then types)
  cuisine: {
    type: String,
    required: true,
    // enum: [
    //   "International",

    //   "African",
    //   "Antarctic",
    //   "Asian",
    //   "European",
    //   "North American",
    //   "Pacific Islander",
    //   "South American",

    //   "Afghan",
    //   "Albanian",
    //   "Algerian",
    //   "American",
    //   "Andorran",
    //   "Angolan",
    //   "Antiguan",
    //   "Argentinian",
    //   "Armenian",
    //   "Australian",
    //   "Austrian",
    //   "Azerbaijani",
    //   "Bahamian",
    //   "Bahraini",
    //   "Bangladeshi",
    //   "Barbadian",
    //   "Belarusian",
    //   "Belgian",
    //   "Belizean",
    //   "Beninese",
    //   "Bhutanese",
    //   "Bolivian",
    //   "Bosnian",
    //   "Botswanan",
    //   "Brazilian",
    //   "British",
    //   "Bruneian",
    //   "Bulgarian",
    //   "Burkinabé",
    //   "Burmese",
    //   "Burundian",
    //   "Cambodian",
    //   "Cameroonian",
    //   "Canadian",
    //   "Cape Verdean",
    //   "Central African",
    //   "Chadian",
    //   "Chilean",
    //   "Chinese",
    //   "Colombian",
    //   "Comorian",
    //   "Congolese (Congo-Brazzaville)",
    //   "Congolese (Congo-Kinshasa)",
    //   "Costa Rican",
    //   "Croatian",
    //   "Cuban",
    //   "Cypriot",
    //   "Czech",
    //   "Danish",
    //   "Djiboutian",
    //   "Dominican (Dominican Republic)",
    //   "Dominican (Dominica)",
    //   "Dutch",
    //   "Ecuadorian",
    //   "Egyptian",
    //   "Equatorial Guinean",
    //   "Emirati",
    //   "Eritrean",
    //   "Estonian",
    //   "Eswatini",
    //   "Ethiopian",
    //   "Fijian",
    //   "Filipino",
    //   "Finnish",
    //   "French",
    //   "Gabonese",
    //   "Gambian",
    //   "Georgian",
    //   "German",
    //   "Ghanaian",
    //   "Greek",
    //   "Grenadian",
    //   "Guatemalan",
    //   "Guinean",
    //   "Bissau-Guinean",
    //   "Guyanese",
    //   "Haitian",
    //   "Honduran",
    //   "Hungarian",
    //   "Icelandic",
    //   "Indian",
    //   "Indonesian",
    //   "Iraqi",
    //   "Irish",
    //   "Israeli",
    //   "Italian",
    //   "Ivorian",
    //   "Jamaican",
    //   "Japanese",
    //   "Jordanian",
    //   "Kazakh",
    //   "Kenyan",
    //   "Kiribati",
    //   "Kuwaiti",
    //   "Kyrgyz",
    //   "Laotian",
    //   "Latvian",
    //   "Lebanese",
    //   "Lesotho",
    //   "Liberian",
    //   "Libyan",
    //   "Liechtensteiner",
    //   "Lithuanian",
    //   "Luxembourgish",
    //   "Malagasy",
    //   "Malawian",
    //   "Malaysian",
    //   "Maldivian",
    //   "Malian",
    //   "Maltese",
    //   "Marshallese",
    //   "Mauritanian",
    //   "Mauritian",
    //   "Mexican",
    //   "Micronesian",
    //   "Moldovan",
    //   "Monacan",
    //   "Mongolian",
    //   "Montenegrin",
    //   "Moroccan",
    //   "Mozambican",
    //   "Namibian",
    //   "Nauruan",
    //   "Nepalese",
    //   "New Zealander",
    //   "Nicaraguan",
    //   "Nigerien",
    //   "Nigerian",
    //   "North Korean",
    //   "North Macedonian",
    //   "Norwegian",
    //   "Omani",
    //   "Pakistani",
    //   "Palauan",
    //   "Palestinian",
    //   "Panamanian",
    //   "Papua New Guinean",
    //   "Paraguayan",
    //   "Persian",
    //   "Peruvian",
    //   "Polish",
    //   "Portuguese",
    //   "Qatari",
    //   "Romanian",
    //   "Russian",
    //   "Rwandan",
    //   "Saint Kitts and Nevis",
    //   "Saint Lucian",
    //   "Saint Vincentian",
    //   "Salvadoran",
    //   "Samoan",
    //   "San Marinese",
    //   "São Toméan",
    //   "Saudi Arabian",
    //   "Senegalese",
    //   "Serbian",
    //   "Seychellois",
    //   "Sierra Leonean",
    //   "Singaporean",
    //   "Slovak",
    //   "Slovenian",
    //   "Solomon Islander",
    //   "Somali",
    //   "South African",
    //   "South Korean",
    //   "South Sudanese",
    //   "Spanish",
    //   "Sri Lankan",
    //   "Sudanese",
    //   "Surinamese",
    //   "Swazi",
    //   "Swedish",
    //   "Swiss",
    //   "Syrian",
    //   "Taiwanese",
    //   "Tajik",
    //   "Tanzanian",
    //   "Thai",
    //   "Timorese",
    //   "Togolese",
    //   "Tongan",
    //   "Trinidadian",
    //   "Tunisian",
    //   "Turkish",
    //   "Turkmen",
    //   "Tuvaluan",
    //   "Ugandan",
    //   "Ukrainian",
    //   "Uruguayan",
    //   "Uzbek",
    //   "Vanuatuan",
    //   "Vatican",
    //   "Venezuelan",
    //   "Vietnamese",
    //   "Yemeni",
    //   "Zambian",
    //   "Zimbabwean",

    //   "Abkhazian",
    //   "American Samoa",
    //   "Anguillan",
    //   "Aruban",
    //   "Ascension Island",
    //   "Australian Antarctic Territory",
    //   "Bermudian",
    //   "Bonaire",
    //   "British Antarctic Territory",
    //   "British Indian Ocean Territory",
    //   "British Virgin Islands",
    //   "Caledonian",
    //   "Cayman Islands",
    //   "Christmas Island",
    //   "Cocos Islands",
    //   "Cook Islands",
    //   "Curacao",
    //   "English",
    //   "Faroe Islands",
    //   "Falkland Islands",
    //   "French Guiana",
    //   "French Polynesia",
    //   "Gibraltarian",
    //   "Greenland",
    //   "Guadeloupean",
    //   "Guamanian",
    //   "Hong Kong",
    //   "Isle of Man",
    //   "Jersey",
    //   "Johnston Atoll",
    //   "Macanese",
    //   "Madeira",
    //   "Mahorais",
    //   "Martiniquais",
    //   "Montserrat",
    //   "Niue",
    //   "Norfolk Island",
    //   "Northern Mariana Islands",
    //   "Palmyra Atoll",
    //   "Pitcairn Islands",
    //   "Puerto Rican",
    //   "Reunionese",
    //   "Saint Barthelemy",
    //   "Saint Helena",
    //   "Saint Pierre and Miquelon",
    //   "Scottish",
    //   "Sint Eustatius",
    //   "Sint Maarten",
    //   "South Georgia and the South Sandwich Islands",
    //   "Svalbard",
    //   "Tokelau",
    //   "Turks and Caicos Islands",
    //   "US Virgin Islands",
    //   "Wallis and Futuna",
    //   "Welsh",
    //   "Western Sahara",

    //   "Amazonian",
    //   "American Indian",
    //   "Amish",
    //   "Ashkenazi",
    //   "Assyrian",
    //   "Aromanian",
    //   "Basque",
    //   "Buddhist",
    //   "Bukharian",
    //   "Cantonese",
    //   "Caribbean",
    //   "Cajun",
    //   "Circassian",
    //   "Cretan",
    //   "Druse",
    //   "Fujian",
    //   "Galician",
    //   "Gazan",
    //   "Hmong",
    //   "Hunan",
    //   "Istrian",
    //   "Jain",
    //   "Jewish Syrian",
    //   "Kurdish",
    //   "Lombardian",
    //   "Louisiana Creole",
    //   "Mediterranean",
    //   "Middle Eastern",
    //   "Neapolitan",
    //   "Northern Cypriot",
    //   "Nortern Italian",
    //   "Okinawan",
    //   "Polynesian",
    //   "Pontian",
    //   "Quebecois",
    //   "Sami",
    //   "Sardinian",
    //   "Sephardic",
    //   "Shanghainese",
    //   "Sichuan",
    //   "Sicilian",
    //   "Soul Food",
    //   "South Indian",
    //   "Szechuan",
    //   "Tatar",
    //   "Tibetan",
    //   "Uyghur",
    //   "Venetian",

    //   "Seafood",
    //   "Steakhouse",
    //   "Vegetarian",

    //   "Other",
    // ],
    // default: "Other",
  },
  address: {
    type: String,
    required: true,
    minlength: 5, // Ensuring address is at least 5 characters long
  },
  image: {
    type: String,
    validate: {
      validator(value) {
        // Check if the value is a valid URL
        return validator.isURL(value, {
          protocols: ["http", "https"],
          require_protocol: true,
        });
      },
      message: "Image URL must be a valid URL.",
      default: "", // Default is an empty string if no image is provided
    },
  },
  website: {
    type: String,
    validate: {
      validator(value) {
        // Check if the value is a valid URL
        return validator.isURL(value, {
          protocols: ["http", "https"],
          require_protocol: true,
        });
      },
      message: "Website URL must be a valid URL.",
      default: "",
    },
  },
  owner: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User", // Reference to the 'User' model for the author
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now, // Default to the current date and time
  },
});

module.exports = mongoose.model("item", restaurantItemSchema);
